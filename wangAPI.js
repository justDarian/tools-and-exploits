// Extend the window.devhaxx object with custom APIs and hacks
window.devhaxx = Object.assign({
    // Custom API functions
    api: {
        // Add query parameters to a URL
        addQueryParamsToUrl: (url, queryParams) => {
            const urlObj = new URL(url);
            for (const param in queryParams) {
                urlObj.searchParams.append(param, queryParams[param]);
            }
            return urlObj.href;
        },
        
        // Get the lesson hook (HTML element)
        getLessonHook: () => {
            try {
                // Attempt to retrieve from iframe
                return Object.values(html5Iframe.contentWindow.document.getElementById('lesson'))[0].memoizedProps.children[0]._owner.stateNode._screenContainerRef._screenControllerViewRef;
            } catch (e) {
                // If iframe retrieval fails, use main window
                return Object.values(document.getElementById('lesson'))[0].memoizedProps.children[0]._owner.stateNode._screenContainerRef._screenControllerViewRef;
            }
        },
        
        // Get the dashboard hook (HTML element)
        getDashboardHook: () => {
            try {
                // Attempt to retrieve from iframe
                return Object.values(html5Iframe.contentWindow.document.getElementById('StudentDashboard-g38'))[1].children[0]._owner.stateNode.props;
            } catch (e) {
                // If iframe retrieval fails, use main window
                return Object.values(document.getElementById('StudentDashboard-g38'))[1].children[0]._owner.stateNode.props;
            }
        },
        
        // Get the ID of the last question
        getLastQuestionID: function () {
            const steps = window.devhaxx.api.getLessonHook().props.component.api.navigation.getAllSteps();
            const lastStep = steps[Object.keys(steps)[Object.keys(steps).length - 1]];
            return lastStep.id;
        }
    },
    // Custom hack functions
    hacks: {
        // Skip to the end of the lesson
        skipToEnd: () => {
            let lastQuestion = window.devhaxx.api.getLastQuestionID();
            window.devhaxx.api.getLessonHook().props.component.api.navigation.goto(lastQuestion);
        },
        // Show the teacher menu
        teacherMenu: () => {
            window.devhaxx.api.getLessonHook().props.component.api.navigation.setShowMenu(true);
        },
        // Show the admin menu
        admin: () => {
            window.devhaxx.api.getDashboardHook().dispatchToggleCheatButtonsAction();
        },
        // Skip to the quiz
        skipToQuiz: () => {
            const params = {
                type: "QUIZ#"
            };
            try {
                html5Iframe.src = window.devhaxx.api.addQueryParamsToUrl(html5Iframe.src, params);
            } catch (e) {
                window.location.href = window.devhaxx.api.addQueryParamsToUrl(html5Iframe.src, params);
            }
        },
        // Alternative method to skip to the end of the lesson
        skipToEndAlt: () => { // This method changes part of the URL to skip to the end instead of hooking into the API
            try {
                let lastQuestion = window.devhaxx.api.getLastQuestionID();
                html5Iframe.src = html5Iframe.src + '/' + lastQuestion;
            } catch {
                let lastQuestion = window.devhaxx.api.getLastQuestionID();
                window.location.href = window.location.href + '/' + lastQuestion;
            }
        },
        // Show FPS information
        showFPS: () => {
            const params = {
                fps: "true"
            };
            try {
                html5Iframe.src = window.devhaxx.api.addQueryParamsToUrl(html5Iframe.src, params);
            } catch (e) {
                window.location.href = window.devhaxx.api.addQueryParamsToUrl(window.location.href, params);
            }
        },
        // Modify timeout mode
        minuteFarmer: () => {
            const params = {
                timeoutMode: "false"
            };
            try {
                html5Iframe.src = window.devhaxx.api.addQueryParamsToUrl(html5Iframe.src, params);
            } catch (e) {
                window.location.href = window.devhaxx.api.addQueryParamsToUrl(window.location.href, params);
            }
        }
    }
}, window.devhaxx);